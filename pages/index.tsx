import { useEffect, useState } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';

import Navbar from '../components/Navbar';
import ChatBox from '../components/ChatBox';
import Leaderboard from '../components/Leaderboard';
import Timer from '../components/Timer';
import VoteControls from '../components/VoteControls';
import NewCategoryPopup from '../components/NewCategoryPopup';

import { getCategories, messages, addCategory } from '../utils/tmi'; 
import toggleDimmer from '../utils/toggleDimmer';

interface ChatData{
  messages: any[];
}

const Home: NextPage = () => {
  const [chatData, setChatData] = useState<ChatData | undefined>(undefined);
  const [voteingCategories, setVoteingCategories] = useState<any>([]);
  const [leaderboard, setLeaderboard] = useState<any>([]);
  const [isTimerRunning, setTimer] = useState<boolean>(false);
  const [isCreatingNew, setIsCreatingNew] = useState<boolean>(false);
  const filterCategories = [
    {
      name:'2',
    },
    {
      name:'4',
    },
    {
      name:'6',
    },
    {
      name:'8',
    }
  ];

  const [categoryCount, setCategoryCount] = useState<any>(2);

  const handleFilter = (categoryCount: string) =>{
    setCategoryCount(+categoryCount);
  }

  useEffect(()=>{
    setVoteingCategories(getCategories());
  },[])

  useEffect(()=>{
    let timerFunc = setInterval(() => {
      setChatData({
        messages: messages
      });
    }, 1000);
    return () => clearInterval(timerFunc)
  });

  const addVotingCategory = (category: any) =>{
    if(voteingCategories.length < categoryCount){
      setVoteingCategories([...voteingCategories, category]);
    }else{
      throw('max categories reached');
    }
  }

  return (
    <div className='index'>
      <Head>
        <title>Stream Vote</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, maximum-scale=1, maximum-scale=1.0, user-scalable=0" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NewCategoryPopup 
        isCreatingNew={isCreatingNew}
        setIsCreatingNew={setIsCreatingNew}
        addVotingCategory={addVotingCategory}
      />
      <div className="main">
        <VoteControls 
          addVotingCategory={addVotingCategory}
          setIsCreatingNew={setIsCreatingNew}
          isCreatingNew={isCreatingNew}
          categoryCount={categoryCount}
          setCategoryCount={setCategoryCount}
          filterCategories={filterCategories}
          handleFilter={handleFilter}
        />
        <Timer
          isRunning={isTimerRunning}
          setTimer={setTimer}
        />
        <Leaderboard 
          leaderboard={voteingCategories.slice(0, 3)}
        />
        <div className='main__left'>
        </div>
        <div className="main__center">
          <ChatBox 
            chatData={chatData}
          /> 
        </div>
        <div className='main__right'>

        </div>
      </div>
    </div>
  )
}

export default Home;
